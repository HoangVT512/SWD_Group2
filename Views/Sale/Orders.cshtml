@model WebApplication1.ViewModel.OrdersViewModel
@{
	Layout = null;

	ViewData["Title"] = "Order Management";
	var statuses = new Dictionary<string, string>
	{
		{ "Pending", "bg-warning" },
		{ "Processing", "bg-info" },
		{ "Shipped", "bg-primary" },
		{ "Completed", "bg-success" },
		{ "Cancelled", "bg-danger" }
	};
}
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - WebApplication1</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/order.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/WebApplication1.styles.css" asp-append-version="true" />

</head>
@section Styles {
	<link rel="stylesheet" href="~/css/sale-dashboard.css" />
	<style>
		.search-section {
			background-color: white;
			border-radius: 6px;
			padding: 15px;
			margin-bottom: 20px;
			box-shadow: 0 2px 5px rgba(0,0,0,0.05);
		}

		.filter-row {
			display: flex;
			flex-wrap: wrap;
			margin: 0 -5px;
		}

			.filter-row > div {
				padding: 0 5px;
				margin-bottom: 10px;
			}

		.filter-column {
			flex: 1;
			min-width: 200px;
		}

		.status-filter-column {
			min-width: 150px;
		}

		.date-filter-column {
			min-width: 180px;
		}

		.sort-column {
			min-width: 180px;
		}

		.action-column {
			min-width: 120px;
		}

		.pagination-container {
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin-top: 20px;
		}

		.page-info {
			color: #6c757d;
		}

		.order-row:hover {
			background-color: rgba(54, 162, 235, 0.05);
		}
	</style>
}

<div class="content-header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-sm-6">
				<h1>Order Management</h1>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item" style="background: cyan;border-radius: 10px;padding: 6px;margin-left: 10px;font-weight: 900;"><a href="/">Home</a></li>
					<li class="breadcrumb-item" style="background: cyan;border-radius: 10px;padding: 6px;margin-left: 10px;font-weight: 900;"><a href="/Sale/Dashboard">Dashboard</a></li>
					<li class="breadcrumb-item active">Orders</li>
				</ol>
			</div>
		</div>
	</div>
</div>

<section class="content">
	<div class="container-fluid">
		<!-- Search & Filters Section -->
		<div class="search-section">
			<form id="searchForm" asp-action="Orders" method="get">
				<div class="filter-row">
					<div class="filter-column">
						<label>Search</label>
						<input type="text" name="search" class="form-control" value="@Model.SearchTerm" placeholder="Order ID, Customer, Address..." />
					</div>

					<div class="status-filter-column">
						<label>Status</label>
						<select name="status" class="form-control">
							@if (Model.Status == "all" || string.IsNullOrEmpty(Model.Status))
							{
								<option value="all" selected>All Statuses</option>
							}
							else
							{
								<option value="all">All Statuses</option>
							}

							@foreach (var status in Model.OrderStatuses)
							{
								if (Model.Status == status)
								{
									<option value="@status" selected>@status</option>
								}
								else
								{
									<option value="@status">@status</option>
								}
							}
						</select>
					</div>

					<div class="date-filter-column">
						<label>From</label>
						<input type="date" name="startDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
					</div>

					<div class="date-filter-column">
						<label>To</label>
						<input type="date" name="endDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
					</div>

					<div class="sort-column">
						<label>Sort by</label>
						<select name="sortBy" class="form-control">
							@if (Model.SortBy == "newest")
							{
								<option value="newest" selected>Newest First</option>
							}
							else
							{
								<option value="newest">Newest First</option>
							}

							@if (Model.SortBy == "oldest")
							{
								<option value="oldest" selected>Oldest First</option>
							}
							else
							{
								<option value="oldest">Oldest First</option>
							}

							@if (Model.SortBy == "highest")
							{
								<option value="highest" selected>Highest Amount</option>
							}
							else
							{
								<option value="highest">Highest Amount</option>
							}

							@if (Model.SortBy == "lowest")
							{
								<option value="lowest" selected>Lowest Amount</option>
							}
							else
							{
								<option value="lowest">Lowest Amount</option>
							}
						</select>
					</div>

					<div class="action-column">
						<label>&nbsp;</label>
						<div class="d-flex">
							<button type="submit" class="btn btn-primary flex-grow-1">
								<i class="fas fa-search mr-1"></i> Search
							</button>
							<a href="/Sale/Orders" class="btn btn-secondary ml-2">
								<i class="fas fa-redo"></i>
							</a>
						</div>
					</div>
				</div>

				<input type="hidden" name="page" id="pageInput" value="1" />
				<input type="hidden" name="pageSize" value="@Model.PageSize" />
			</form>
		</div>

		<!-- Orders Table -->
		<div class="table-container">
			<div class="table-header">
				<div>
					<h5 class="mb-0">Orders List</h5>
					<small class="text-muted">Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalOrders) of @Model.TotalOrders orders</small>
				</div>
				<div class="orders-card-header-right">
					<!-- Sử dụng StartDate và EndDate từ model OrdersViewModel -->
					<a href="@Url.Action("ExportOrdersToExcel", "Sale", new {
       status = Model.Status,
       startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
       endDate = Model.EndDate?.ToString("yyyy-MM-dd")
    })" class="btn btn-success">
						<i class="fas fa-file-excel mr-2"></i> Export to Excel
					</a>
				</div>
			</div>

			<div class="table-responsive">
				@if (Model.Orders.Any())
				{
					<table class="table table-hover">
						<thead>
							<tr>
								<th style="width: 80px">Order ID</th>
								<th>Customer</th>
								<th>Date</th>
								<th>Items</th>
								<th>Total</th>
								<th>Status</th>
								<th>Payment</th>
								<th style="width: 120px">Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var order in Model.Orders)
							{
								<tr class="order-row">
									<td class="font-weight-bold">#@order.OrderId</td>
									<td>
										<div>@(order.User?.FullName ?? "Guest")</div>
										<small class="text-muted">@order.PhoneContact</small>
									</td>
									<td>@order.OrderDate?.ToString("dd/MM/yyyy")</td>
									<td>@order.OrderDetails.Count items</td>
									<td class="font-weight-bold">@order.TotalAmount.ToString("C")</td>
									<td>
										<span class="badge @(statuses.ContainsKey(order.Status) ? statuses[order.Status] : "bg-secondary")">
											@(order.Status ?? "N/A")
										</span>
									</td>
									<td>
										@if (order.Payment != null)
										{
											<div class="@(order.Payment.PaymentStatus == "Completed" ? "text-success" : "text-warning")">
												@order.Payment.PaymentMethod
											</div>
											<small class="text-muted">@order.Payment.PaymentStatus</small>
										}
										else
										{
											<span class="text-danger">No Payment</span>
										}
									</td>
									<td>
										<div class="btn-group">
											<a href="/Sale/OrderDetails/@order.OrderId" class="btn btn-sm btn-info">
												<i class="fas fa-eye">View Detail</i>
											</a>

										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>

					<!-- Order Status Modals -->
					@foreach (var order in Model.Orders)
					{
						<div class="modal fade" id="statusModal-@order.OrderId" tabindex="-1" role="dialog">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title">Update Order #@order.OrderId Status</h5>
										<button type="button" class="close" data-dismiss="modal">
											<span>&times;</span>
										</button>
									</div>
									<form asp-action="UpdateOrderStatus" method="post">
										<input type="hidden" name="orderId" value="@order.OrderId" />
										<div class="modal-body">
											<div class="form-group">
												<label>Current Status</label>
												<div>
													<span class="badge @(statuses.ContainsKey(order.Status) ? statuses[order.Status] : "bg-secondary")">
														@(order.Status ?? "N/A")
													</span>
												</div>
											</div>
											<div class="form-group">
												<label>New Status</label>
												<select name="status" class="form-control">
													@if (order.Status == "Pending")
													{
														<option value="Pending" selected>Pending</option>
													}
													else
													{
														<option value="Pending">Pending</option>
													}

													@if (order.Status == "Processing")
													{
														<option value="Processing" selected>Processing</option>
													}
													else
													{
														<option value="Processing">Processing</option>
													}

													@if (order.Status == "Shipped")
													{
														<option value="Shipped" selected>Shipped</option>
													}
													else
													{
														<option value="Shipped">Shipped</option>
													}

													@if (order.Status == "Completed")
													{
														<option value="Completed" selected>Completed</option>
													}
													else
													{
														<option value="Completed">Completed</option>
													}

													@if (order.Status == "Cancelled")
													{
														<option value="Cancelled" selected>Cancelled</option>
													}
													else
													{
														<option value="Cancelled">Cancelled</option>
													}
												</select>
											</div>
											<div class="form-group">
												<label>Notes</label>
												<textarea name="notes" class="form-control" rows="2"></textarea>
											</div>
										</div>
										<div class="modal-footer">
											<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
											<button type="submit" class="btn btn-primary">Update Status</button>
										</div>
									</form>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<div class="text-center py-5">
						<i class="fas fa-shopping-cart text-muted mb-3" style="font-size: 3rem;"></i>
						<h5>No orders found</h5>
						<p class="text-muted">Try adjusting your search or filter to find what you're looking for.</p>
					</div>
				}
			</div>

			<!-- Pagination -->
			@if (Model.TotalPages > 1)
			{
				<div class="pagination-container">
					<div class="page-info">
						Showing page @Model.CurrentPage of @Model.TotalPages
					</div>
					<nav>
						<ul class="pagination">
							<li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
								<a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.CurrentPage - 1))">Previous</a>
							</li>

							@{
								const int maxPagesToShow = 5;
								int startPage = Math.Max(1, Model.CurrentPage - maxPagesToShow / 2);
								int endPage = Math.Min(Model.TotalPages, startPage + maxPagesToShow - 1);

								if (startPage > 1)
								{
									<li class="page-item">
										<a class="page-link" href="javascript:void(0)" onclick="goToPage(1)">1</a>
									</li>
									if (startPage > 2)
									{
										<li class="page-item disabled">
											<span class="page-link">...</span>
										</li>
									}
								}

								for (int i = startPage; i <= endPage; i++)
								{
									<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
										<a class="page-link" href="javascript:void(0)" onclick="goToPage(@i)">@i</a>
									</li>
								}

								if (endPage < Model.TotalPages)
								{
									if (endPage < Model.TotalPages - 1)
									{
										<li class="page-item disabled">
											<span class="page-link">...</span>
										</li>
									}
									<li class="page-item">
										<a class="page-link" href="javascript:void(0)" onclick="goToPage(@Model.TotalPages)">@Model.TotalPages</a>
									</li>
								}
							}

							<li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
								<a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.CurrentPage + 1))">Next</a>
							</li>
						</ul>
					</nav>
				</div>
			}
		</div>


	</div>
</section>

@section Scripts {
	<script>
		function goToPage(page) {
			document.getElementById('pageInput').value = page;
			document.getElementById('searchForm').submit();
		}

		// Hiệu ứng loading khi tìm kiếm
		document.getElementById('searchForm').addEventListener('submit', function() {
			document.body.insertAdjacentHTML(
				'beforeend',
				'<div class="loading-overlay"><div class="spinner-border text-primary"></div></div>'
			);
		});
	</script>
}