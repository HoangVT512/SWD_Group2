@model IEnumerable<WebApplication1.Models.Product>
@using System.Globalization
@{
    ViewData["Title"] = "Manage Products";
    int pageNumber = ViewBag.PageNumber;
    int totalPages = ViewBag.TotalPages;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Manage Products</h2>
        <a href="@Url.Action("AddProduct", "Product")" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add New Product
        </a>
    </div>

    <div class="card shadow">
        <div class="card-body">
            <form method="get" class="mb-3 d-flex gap-2">
                <input type="text" name="search" placeholder="Search product..." value="@Context.Request.Query["search"]" class="form-control w-25" />
                <select name="sortBy" class="form-select w-25">
                    <option value="">Sort By</option>
                    <option value="price_asc" selected="@(Context.Request.Query["sortBy"] == "price_asc")">Price (Low to High)</option>
                    <option value="price_desc" selected="@(Context.Request.Query["sortBy"] == "price_desc")">Price (High to Low)</option>
                    <option value="name_asc" selected="@(Context.Request.Query["sortBy"] == "name_asc")">Name (A-Z)</option>
                    <option value="name_desc" selected="@(Context.Request.Query["sortBy"] == "name_desc")">Name (Z-A)</option>
                </select>
                <button type="submit" class="btn btn-secondary">Search & Sort</button>
            </form>

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Product Name</th>
                            <th>Category</th>
                            <th>Supplier</th>
                            <th>Price</th>
                            <th>Discount</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Featured</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>
                                    <a href="@Url.Action("ProductDetail", "Product", new { id = product.ProductId })">
                                        @product.ProductId
                                    </a>
                                </td>
                                <td>
                                    @product.ProductName
                                </td>
                                <td>@product.Category?.CategoryName</td>
                                <td>@(product.Supplier?.SupplierName ?? "N/A")</td>
                                <td>@product.BasePrice.ToString("C0", new CultureInfo("vi-VN"))</td>
                                <td>@(product.DiscountPercent.HasValue ? product.DiscountPercent.Value.ToString("P") : "No Discount")</td>
                                <td>@(string.IsNullOrEmpty(product.Description) ? "No Description" : product.Description)</td>
                                <td>
                                    @if (product.Status == true)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>
                                    @if (product.Featured == true)
                                    {
                                        <span class="badge bg-primary">Yes</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">No</span>
                                    }
                                </td>
                                <td>@product.CreatedAt?.ToString("yyyy-MM-dd")</td>
                                <td>
                                    <div class="btn-group">
                                        <a href="@Url.Action("EditProduct", "Product", new { id = product.ProductId })" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <a href="@Url.Action("DeleteProduct", "Product", new { id = product.ProductId })" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?');">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @if (!Model.Any())
                {
                    <div class="alert alert-warning text-center" role="alert">
                        No products found.
                    </div>
                }
            </div>

            <div class="d-flex justify-content-center mt-3">
                @if (totalPages >= 1)
                {
                    <nav>
                        <ul class="pagination">
                            @if (pageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("ManageProducts", new { page = pageNumber - 1, search = Context.Request.Query["search"], sortBy = Context.Request.Query["sortBy"] })">Previous</a>
                                </li>
                            }
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == pageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("ManageProducts", new { page = i, search = Context.Request.Query["search"], sortBy = Context.Request.Query["sortBy"] })">@i</a>
                                </li>
                            }
                            @if (pageNumber < totalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("ManageProducts", new { page = pageNumber + 1, search = Context.Request.Query["search"], sortBy = Context.Request.Query["sortBy"] })">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>